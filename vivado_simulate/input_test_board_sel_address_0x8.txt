################################# For these tests to pass the following package......
####    spi_board_select_pkg.vhd
################################# ......must be set to the following settings.........
#### constant SPI_BOARD_SEL_ADDR_BITS : integer := 4;	-- This has to be a multiple of 4 for HREAD to work OK in testbench
#### constant SPI_BOARD_SEL_PROTOCOL_ADDR_BITS : integer := 4;	-- This has to be a multiple of 4 for HREAD to work OK in testbench
#### constant SPI_BOARD_SEL_PROTOCOL_DATA_BITS : integer := 16;	-- This has to be a multiple of 4 for HREAD to work OK in testbench
#### constant DATA_SIZE_C : integer   := SPI_BOARD_SEL_PROTOCOL_ADDR_BITS+SPI_BOARD_SEL_PROTOCOL_DATA_BITS+1;                             -- Total data size = read/write bit + address + data

#### address  input data  read data  read data mask ####

#### Finished Tests ####
#### These tests will pass when all 16 SPI slaves are fitted with their settings - 'make_all_addresses_writeable_for_testing = TRUE'
#### Test all write then read them (set MSb just as an extra test)
#### Writ		8	 	0 		8080 		0000 		0000
#### Read		8	 	0 		8080 		8080 		FFFF
#### Writ		8	 	F 		C080 		0000 		0000
#### Read		8	 	F 		C080 		C080 		FFFF




####                                                                                                   
####                                                                                                   
#### BELOW ARE VANILLA TESTS WITH GENERICS OF 'spi_master_tb.VHD' SET TO....
####                                                                                                   
####            board_select = TRUE
####            make_all_addresses_writeable_for_testing = TRUE
####....AND...
####                                                                                                   
#### spi_package.vhd...                                                                           
####    constant SPI_ADDRESS_BITS : integer := 4;                                                      
####    constant SPI_DATA_BITS : integer := 16;           
####
#### ...AND...
####
#### spi_board_select_pkg.vhd...
####     constant SPI_BOARD_SEL_ADDR_BITS : integer := 4;
####
#### ###########################################################################
#### board select address    address  input data  read data  read data mask ####                       
#### ###########################################################################                                                                                           
#### Test all reads
Read			8	 			0 		0000 		0000 		FFFF
Read			8	 			1 		0000 		0001 		FFFF
Read			8	 			2 		0000 		0002 		FFFF
Read			8	 			3 		0000 		0003 		FFFF
Read			8	 			4 		0000 		0004 		FFFF
Read			8	 			5 		0000 		0005 		FFFF
Read			8	 			6 		0000 		0006 		FFFF
Read			8	 			7 		0000 		0007 		FFFF
Read			8	 			8 		0000 		0008 		FFFF
Read			8	 			9 		0000 		0009 		FFFF
Read			8	 			A 		0000 		000A 		FFFF
Read			8	 			B 		0000 		000B 		FFFF
Read			8	 			C 		0000 		000C 		FFFF
Read			8	 			D 		0000 		000D 		FFFF
Read			8	 			E 		0000 		000E 		FFFF
Read			8	 			F 		0000 		000F 		FFFF
####Read 		10 				0000 		0010 		FFFF #### generates an 'Text input file format read error' as input address out of 4 bit range

#### Test all write then read them (set MSb just as an extra test)
Writ			8	 			0 		8000 		0000 		0000
Read			8	 			0 		8000 		8000 		FFFF
Writ			8	 			1 		8111 		0000 		0000
Read			8	 			1 		8111 		8111 		FFFF
Writ			8	 			2 		8222 		0000 		0000
Read			8	 			2 		8222 		8222 		FFFF
Writ			8	 			3 		8333 		0000 		0000
Read			8	 			3 		8333 		8333 		FFFF
Writ			8	 			4 		8444 		0000 		0000
Read			8	 			4 		8444 		8444 		FFFF
Writ			8	 			5 		8555 		0000 		0000
Read			8	 			5 		8555 		8555 		FFFF
Writ			8	 			6 		8666 		0000 		0000
Read			8	 			6 		8666 		8666 		FFFF
Writ			8	 			7 		8777 		0000 		0000
Read			8	 			7 		8777 		8777 		FFFF
Writ			8	 			8 		8888 		0000 		0000
Read			8	 			8 		8888 		8888 		FFFF
Writ			8	 			9 		8999 		0000 		0000
Read			8	 			9 		8999 		8999 		FFFF
Writ			8	 			A 		8AAA 		0000 		0000
Read			8	 			A 		8AAA 		8AAA 		FFFF
Writ			8	 			B 		8BBB 		0000 		0000
Read			8	 			B 		8BBB 		8BBB 		FFFF
Writ			8	 			C 		8CCC 		0000 		0000
Read			8	 			C 		8CCC 		8CCC 		FFFF
Writ			8	 			D 		8DDD 		0000 		0000
Read			8	 			D 		8DDD 		8DDD 		FFFF
Writ			8	 			E 		8EEE 		0000 		0000
Read			8	 			E 		8EEE 		8EEE 		FFFF
Writ			8	 			F 		8FFF 		0000 		0000
Read			8	 			F 		8FFF 		8FFF 		FFFF

#### Read all written registers as an extra test
Read			8	 			0 		8000 		8000 		FFFF
Read			8	 			1 		8111 		8111 		FFFF
Read			8	 			2 		8222 		8222 		FFFF
Read			8	 			3 		8333 		8333 		FFFF
Read			8	 			4 		8444 		8444 		FFFF
Read			8	 			5 		8555 		8555 		FFFF
Read			8	 			6 		8666 		8666 		FFFF
Read			8	 			7 		8777 		8777 		FFFF
Read			8	 			8 		8888 		8888 		FFFF
Read			8	 			9 		8999 		8999 		FFFF
Read			8	 			A 		8AAA 		8AAA 		FFFF
Read			8	 			B 		8BBB 		8BBB 		FFFF
Read			8	 			C 		8CCC 		8CCC 		FFFF
Read			8	 			D 		8DDD 		8DDD 		FFFF
Read			8	 			E 		8EEE 		8EEE 		FFFF
Read			8	 			F 		8FFF 		8FFF 		FFFF

